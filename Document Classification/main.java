import java.util.regex.*;
import java.util.*;
import java.io.*;



class main extends javax.swing.JFrame {
	static String t1;
	static String t2;
	
	public static void main(String args[]) throws Exception
	{
		new Spliting().setVisible(true);
		
	}

/**
 * Creates new form application
 */
public Spliting() {
    initComponents();
}

/**
 * This method is called from within the constructor to initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is always
 * regenerated by the Form Editor.
 */
@SuppressWarnings("unchecked")
// <editor-fold defaultstate="collapsed" desc="Generated Code">                          
private void initComponents() {

    jTextField1 = new javax.swing.JTextField();
    outputField = new javax.swing.JTextField();
    jButton1 = new javax.swing.JButton();
    jButton2 = new javax.swing.JButton();
    showbutton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jTextField1.setText("Input");

    outputField.setEditable(false);
    outputField.setText("outputField");
    outputField.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            outputFieldActionPerformed(evt);
        }
    });

    jButton1.setText("input file");

    jButton2.setText("classification result");

    showbutton.setText("Submit");
    showbutton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            showbuttonActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(44, 44, 44)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                .addComponent(outputField))
            .addGap(48, 48, 48)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jButton1)
                .addComponent(jButton2))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(showbutton)
            .addGap(142, 142, 142))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(68, 68, 68)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton1))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(outputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton2))
            .addGap(18, 18, 18)
            .addComponent(showbutton)
            .addContainerGap(127, Short.MAX_VALUE))
    );

    pack();
}// </editor-fold>                        

private void outputFieldActionPerformed(java.awt.event.ActionEvent evt) {                                            
    // TODO add your handling code here:
}                                           

private void showbuttonActionPerformed(java.awt.event.ActionEvent evt) {                                           
    // TODO add your handling code here:
    t1=jTextField1.getText();
    System.out.println(t1);
    t2=outputField.getText();
    try {
    Freqcalc freq=new Freqcalc();
		Example e=new Example();
		Strtofloat sf=new Strtofloat();
		Stopwords stp=new Stopwords();
		stp.run(t1);
		File f=new File("stop.txt");
		Scanner sc=new Scanner(f);
		String s="";
		String input="";
		int phy=0,chem=0,bio=0,unclass=0;
		while(sc.hasNextLine())
		{
			s=s+sc.nextLine();
		}
	//	System.out.println(s+"\n");
		String s1[]=s.split(" ### ");
		for(int i=0;i<s1.length;i++)
		System.out.println(s1[i]+"\n");
		int para[]=new int[s1.length];
		for(int i=0;i<s1.length;i++)
		{
			input=s1[i].toString();
			freq.frequency(input, i);
			System.out.println("i = "+i+"start");
			e.example(i);
			System.out.println("i = "+i+"end");
			para[i]=sf.classification(i);
		}
		 for(int i=0;i<s1.length;i++)
			System.out.println("paragraph "+(i+1)+" is classified into category "+para[i]);	
			for(int i=0;i<s1.length;i++)
			if(para[i]==1)
				phy++;
				else if(para[i]==2)
					chem++;
					else if (para[i]==3) 
						bio++;
						else unclass++;
			if(phy>chem && phy>bio&&phy>unclass) {
				outputField.setText("the given document is physics");
				System.out.print("the given document is physics");
			}
					else if(chem>phy && chem> bio&&chem>unclass){
						outputField.setText("the given document is chemistry");				
						System.out.print("the given document is chemistry");
					}
							else if(bio>phy && bio>chem&&bio>unclass) {
								outputField.setText("the given document is biology");
								System.out.print("the given document is biology");
							}
									else {
										outputField.setText("the given document is unclassified");
										System.out.println("document remains unclassified");	
									}
    
    // outputField.setText(""+t1);
    } catch(Exception e) {
    	e.printStackTrace();
    }
}

// Variables declaration - do not modify                     
private javax.swing.JButton jButton1;
private javax.swing.JButton jButton2;
private javax.swing.JTextField jTextField1;
private static javax.swing.JTextField outputField;
private javax.swing.JButton showbutton;
// End of variables declaration                   
}


class Demo
{
	
	
		/*
	 * To change this license header, choose License Headers in Project Properties.
	 * To change this template file, choose Tools | Templates
	 * and open the template in the editor.
	 */	
	/**
	 *
	 * @author zankhana
	 */

	
}
class Stopwords
{
	static Scanner sc;
	static ArrayList<String>stopWords=new<String>ArrayList();
	static ArrayList<String>input=new<String>ArrayList();
	static void read(String s,ArrayList a) throws Exception
	{
		sc=new Scanner(new File(s));
		while(sc.hasNextLine())
		{
			a.add(sc.nextLine());
		}
	}
	static void display()
	{
		/*for(int i=0;i<stopWords.size();i++)
		System.out.println(stopWords.get(i)); */
		/*for(int i=0;i<input.size();i++)
		System.out.println(input.get(i));*/
		try
		{
			File file = new File("stop.txt");
      		// creates the file
      		file.createNewFile();
      		// creates a FileWriter Object
      		FileWriter out = new FileWriter(file); 
      		// Writes the content to the file
      		for(int i=0;i<input.size();i++)
      		{
      			String s=(String)input.get(i);
      			if(!s.equals(" "))
      			out.write(input.get(i)+"### "); 
      		}
      		out.flush();
      		out.close();
      	}catch(Exception e){
      	System.out.println(e);
      	}
	}
	static void replace()
	{
		for(int i=0;i<input.size();i++)
		{
			String s[]=input.get(i).split(" ");

			for(int j=0;j<stopWords.size();j++)
			{
				for(int k=0;k<s.length;k++)
				{
					Pattern pattern = Pattern.compile( "[^a-zA-Z]" );
					Matcher matcher = pattern.matcher( s[k] );
					//System.out.println(matcher.find());
					s[k] = matcher.replaceAll( "" );
					//System.out.print("ater removing numbers and punctuation"+ s[k] );
					//s[k]=s[k].replaceAll("([a-z]+)[?:!.,;]*", "$1");
                    //s[k]=s[k].replaceAll("([a-z]+)[0-9]*", "$1");
					if(s[k].equalsIgnoreCase(stopWords.get(j)))
					s[k]="";
				}
			}
			String str="";
			for(int j=0;j<s.length;j++)
			{
				if(s[j]!="")
				str=str+s[j]+" ";
			}
			input.remove(i);
			input.add(i,str);
		}
		
		
	}
	static void run(String textFieldInput) throws Exception
	{
		read("stopwords.txt",stopWords);
		read(textFieldInput,input);
		replace();
		display();
	}
}
class Freqcalc
{
	void frequency(String a, int iterationNumber)
	{
		String s[]=a.split(" ");
		String q[]=a.split(" ");
		String m;
		int n=s.length;
		int c[]=new int[n];
		int f[][]=new int[26][3];
		for(int i=0;i<n;i++)
			c[i]=0;
		int max=0,min=0,x=0,avg=0,x1=0;
		for(int i=0;i<26;i++)
			for(int j=0;j<3;j++)
			{
				f[i][j]=0;
			}
	
			
		for(int i=0;i<n;i++)
		{
		
			
			for(int j=0;j<n;j++)
			{
				if(s[i].equalsIgnoreCase(q[j]))
				{
					++c[i];
				}
			}
			
		}
		max=c[0];
		
		for(int i=0;i<n-1;i++)
		{
			
			if(c[i]>max)
			{	
				max=c[i];
				x1=i;
			}
			
		}
		System.out.println(max+" = "+s[x1]);
		
		m=s[x1];
		//for(int i=0;i<3;i++)
			for(int j=0;j<m.length();j++)
				{
					f[j][0]=(int)m.charAt(j);
				}
		min=c[0];
		for(int i=n-1;i>0;i--)
		{
			
			if(c[i]<=min)
			{
				min=c[i];
				x=i;
			}
		}
		System.out.println(min+" = "+s[x]);
		m=s[x];
		for(int j=0;j<m.length();j++)
				{
					f[j][1]=(int)m.charAt(j);
				}
		avg=(min+max)/2;
		for(int i=0;i<n;i++)
		{
			if(c[i]==avg)
			{
				x=i;
				break;
			}
		}
		System.out.println(avg+" = "+s[x]);
		m=s[x];
		for(int j=0;j<m.length();j++)
				{
					f[j][2]=(int)m.charAt(j);
				}
		for(int i=0;i<26;i++){
		
			for(int j=0;j<3;j++)
			{
				System.out.print(f[i][j]);
			}
			System.out.println();
		}
		try
		{
			File file = new File("input" + iterationNumber + ".txt");
      		// creates the file
      		file.createNewFile();
      		// creates a FileWriter Object
      		FileWriter out = new FileWriter(file); 
      		// Writes the content to the file
      		for(int j=0;j<26;j++){
    			 for(int i=0;i<3;i++) 
      				out.write(f[j][i]+"  "); 
      					out.write("\n");
      		}
      		System.out.println("file successfully written");
      		out.flush();
      		out.close();
      	}catch(Exception e){
      	System.out.println(e);
      	}
	}
}
class Example {
	void example(int iterationNumber) 
		{
		Runtime commandPrompt = Runtime.getRuntime();
		// 1.) Run MATLAB normally
		String functionName = "matlab_function('input" + iterationNumber + ".txt'," + iterationNumber +")";
		System.out.println(functionName);
	//	String command = "matlab -r \"" + functionName + "\"";
		
		// 2.) Run MATLAB without editor UI
		String command = "matlab -nodisplay -nodesktop -nosplash -r \"" + functionName +  "\"";
		
		Process process = null;
		try {
			process = commandPrompt.exec(command);
		} catch(IOException e) { e.printStackTrace(); }
		
		System.out.println("Booting MATLAB: Please Wait...");
		try {
			process.waitFor(); // Wait for process to start before letting Java resume
		} catch(InterruptedException e) { e.printStackTrace(); }
		System.out.println("MATLAB boot success.");
	}
}
class Strtofloat
{
	int classification(int iterationNumber) throws IOException
	{
		BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
		File fq = new File("C:\\Users\\zankhana\\Documents\\project final\\output"+iterationNumber+".txt");
	        while(! (fq.exists() && fq.isFile()) )
	        	{ 
	        		//System.out.println("0") ; 
	        		try{Thread.sleep(500);}catch(InterruptedException e){System.out.println(e);}
	        	}
	    System.out.println("1");
		File input1=new File("output"+iterationNumber+".txt");
		Scanner sc1=new Scanner (input1);
		String s=new String();
		float f[][]=new float[3][3];
		int classify[]=new int[3];
		int k=1,c1=0,c2=0,c3=0;
		while(sc1.hasNextLine())
		{
			s=s+sc1.nextLine();
		}
		String s1[]=s.split("  ");
	/*	for(int i=0; i<10;i++)
			System.out.println(s1[i]);
		float x=Float.parseFloat(s1[1]);*/
		for(int i=0;i<3;i++)
			for(int j=0;j<3;j++)
				f[i][j]=Float.parseFloat(s1[k++]);
		for(int i=0;i<3;i++)
		{
			for(int j=0;j<3;j++)
				System.out.print(f[i][j]+"	");
				System.out.println();
		}
		float max;
		for(int j=0;j<3;j++)
		{
			max=f[0][j];
			for(int i=1;i<3;i++)
				if(f[i][j]>max)
				{
					max=f[i][j];
					classify[j]=i;
				}
					
		}
		for(int i=0;i<3;i++)
			classify[i]=++classify[i];
		for(int i=0;i<3;i++)
			System.out.print(classify[i]+"	");
		for(int i=0;i<3;i++)
			if(classify[i]==1)
				c1++;
				else if(classify[i]==2)
					c2++;
					else c3++;
		if(c1>c2 && c1>c3){
		
			System.out.print("the given paragraph is physics");
			return 1;
		}
			else if(c2>c1 && c2> c3){
			
				System.out.print("the given paragraph is chemistry");
				return 2;
			}
				else if(c3>c2 && c3>c1){
				
					System.out.print("the given paragraph is biology");
					return 3;
				}
						else {
							System.out.println("paragraph remains unclassified");
							return 123;
	}
}